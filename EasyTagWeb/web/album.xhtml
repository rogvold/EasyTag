<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"   
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

    <f:metadata>
        <f:viewAction action="#{userBean.redirectIfNotAuthorized}" />
        <f:viewParam name="id" required="true" value="#{albumBean.albumId}" requiredMessage="ALBUM_ID is required"/>
        <f:viewAction action="#{userBean.setUserId(albumBean.album.creatorId)}" if="#{!empty param['id']}"/>
    </f:metadata>

    <h:body>
        <ui:composition template="templates/main.xhtml">

            <ui:param name="windowTitle" value="Album - TagsCool"/>
            <ui:param name="user" value="#{currentUserBean.user}"/>
            <ui:param name="loggedIn" value="#{currentUserBean.userId ne null}"/>
            <ui:param name="userProfile" value="#{userBean.userProfile}"/>

            <ui:define name="slider">
            </ui:define>

            <ui:define name="main_content">
                <div class="row">

                    <div class="col-lg-12">
                        <h1 class="page-header">
                            Просмотр альбома <small>#{albumBean.album.name}</small>
                        </h1>
                        <div class="col-lg-10" style="padding-left: 0px;">
                            <ol class="breadcrumb">
                                <li><a href="users.xhtml">All users</a></li>
                                <li><a href="#{request.contextPath}/userAlbums.xhtml?id=#{albumBean.album.creatorId}">user #{userBean.userId}</a></li>
                                <li class="active">#{albumBean.album.name}</li>
                            </ol>
                        </div>
                        <div class="col-lg-2" style="margin-bottom: 20px;">
                            <form style="display: inline;" action="#{request.contextPath}/resources/file/upload" method="POST" enctype="multipart/form-data">
                                <span class="btn btn-primary fileinput-button #{userBean.getDisabledClass(userBean.current)}" title="Добавить фотографии...">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <input type="file" id="fileupload" name="file" multiple="true"/>
                                </span>    
                                <input type="hidden" name="album_id" value="#{albumBean.albumId}" />
                            </form>
                            <a href="#editAlbumModal" data-toggle="modal" class="btn btn-primary #{userBean.getDisabledClass(userBean.current)}" title="Редактировать альбом...">
                                <i class="glyphicon glyphicon-pencil"></i>
                            </a>
                            <a href="#" class="btn btn-primary" onclick=" resetPhotosList(); return false;" title="Обновить"><span class="glyphicon glyphicon-refresh"></span></a>
                        </div>
                    </div>

                </div><!-- /.row -->

            </ui:define>

            <ui:define name="main_footer">
                <div class="row">
                    <div class="col-lg-12">
                        <p>Copyright © TagsCool 2013</p>
                    </div>
                </div>
            </ui:define>

            <ui:define name="dialogs">
                <!-- Modal -->
                <div class="modal fade" id="addFileModal" tabindex="-1" role="dialog" aria-labelledby="addFileModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="display: none;">×</button>
                                <h4 class="modal-title">Загрузка фотографий...</h4>
                            </div>
                            <div class="modal-body">
                                <div style="display: block; min-width: 300px; margin: 0 auto; text-align: center; ">
                                    <!-- The global progress bar -->
                                    <div id="progress" class="progress progress-striped" style="display: none;">
                                        <div class="progress-bar progress-bar-success"></div>
                                    </div>
                                    <span class="btn btn-danger" onclick="window.location.reload();">
                                        <i class="glyphicon glyphicon-remove"></i>
                                        <span>Cancel</span>
                                    </span>
                                </div>
                            </div>
                            
                            <!--                            <div class="modal-footer">
                                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                                                    <button type="button" class="btn btn-primary">Save changes</button>
                                                        </div>-->
                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->
                
                <!-- Modal -->
                <div class="modal fade" id="editAlbumModal" tabindex="-1" role="dialog" aria-labelledby="editAlbumModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                <h4 class="modal-title">Редактирование албома</h4>
                            </div>
                            <div class="modal-body">
                                <div style="display: block; max-width: 400px; margin: 0 auto; text-align: center; ">
                                    <form id="editAlbumForm" action="#{request.contextPath}/resources/album/#{albumBean.albumId}/update" method="POST">
                                        <input type="hidden" name="id" value="#{albumBean.albumId}"/>
                                        <input type="text" placeholder="Название альбома" id="albumName" value="#{albumBean.album.name}" name="name" style="margin-bottom: 20px; width: 100%;" />
                                        <textarea placeholder="Описание альбома" id="albumDescription" name="description" style="text-align: left; margin-bottom: 20px; width: 100%;" rows="4">#{albumBean.album.description}</textarea>
                                        <input type="text" placeholder="Ключевые слова через запятую" id="albumTags" value="#{albumBean.album.tags}" name="tags" style="margin-bottom: 20px; width: 100%;" />
                                        <br/>
                                        <button class="btn btn-success" id="saveButton" style="margin-bottom: 0px; cursor: pointer;">
                                            <i class="glyphicon glyphicon-ok"></i>
                                            Сохранить
                                        </button>

                                    </form>
                                </div>
                            </div>
                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->
            </ui:define>

            <ui:define name="scripts">
                <script>
                    //<![CDATA[
                    
                    function onUploadsStarted(e, o, x) {
                        console.log(x);
                        $('#progress').show();
                        $('#progress .progress-bar').css('width', '0%');
                        $('#addFileModal').modal('show');
                    }

                    function onUploadFinished() {
                        $('#progress').hide();
                        $('#progress .progress-bar').css('width', '0%');
                        $('#addFileModal').modal('hide');
                        setTimeout('resetPhotosList()', 500);
                    }

                    function requestPhotosList(url, callback) {
                        $.get(url)
                                .done(function(data) {
                                    console.log(data);
                                    if (data.responseCode === 1) {
                                        var photos = [];
                                        photos = data.data;
                                        callback(photos);
                                    }
                                })
                                .fail(function() {
                                    alert("error");
                                });
                    }

                    function resetPhotosList() {
                        clearPhotosList();
                        row = $('<div class="row photos"/>');
                        row.append('<p style="padding-left:30px;">Loading list of photos...</p>');
                        row.appendTo('#main-content');
                        requestPhotosList(
                                '#{request.contextPath}/resources/Photo/getPhotos?albumId=#{albumBean.albumId}',
                                                function(photos) {
                                                    clearPhotosList();
                                                    addAllPhotos(photos);
                                                }
                        );
                    }

                    function deletePhoto(id) {
                        $.ajax({
                            type: "GET",
                            url: "#{request.contextPath}/resources/Photo/deletePhoto?photoId=" + id,
                            success: function(responseText, statusText) {
                                if (statusText === 'success') {
                                    console.log(responseText.data);
                                    resetPhotosList();
                                }
                            },
                            dataType: "json"
                        });
                    }

                    function deletePhoto(id) {
                        $.ajax({
                            type: "GET",
                            url: "#{request.contextPath}/resources/Photo/deletePhoto?photoId=" + id,                   
                            success: function(responseText, statusText)  {
                                if (statusText === 'success'){      
                                    console.log(responseText.data);
                                    resetPhotosList();
                                }
                            },
                            dataType: "json"
                        });
                    }

                    function editPhoto(id) {
                        document.location.href = '#{request.contextPath}/tagEditor/Editor.html?id=' + id;
                    }

                    function addAllPhotos(photos) {
                        var n = 1;
                        var row = null;
                        var container = $('#main-content');
                        for (var i in photos) {
                            console.log(photos[i]);
                            if (row === null) {
                                row = $('<div class="row photos" />');
                            }
                            row.append(createItem(photos[i]));
                            if ((n++) % 4 === 0) {
                                console.log("break");
                                container.append(row);
                                row = null;
                            }
                        }
                        if (n === 1) {
                            row = $('<div class="row photos"/>');
                            row.append('<p style="padding-left:30px;">No photos to show.</p>');
                        }
                        if (row !== null) {
                            container.append(row);
                        }
                    }

                    function clearPhotosList() {
                        $("#main-content .row.photos").remove();
                    }

                                function createItem(photo) {
                                    var item = $('<div class="col-md-3 portfolio-item imageSub" />');
                                    item.attr("id", "photo-" + photo.id);
                                    item.append('<a href="#{request.contextPath}/photo.xhtml?id=' + photo.id + '"><img class="img-responsive" src="#{request.contextPath}/resources/file/download?id=' + photo.previewId + '"/></a>');
                                    item.append('<div class="blackbg"></div>');
                                    item.append('<div class="label">' + photo.name + '</div>');
                                    
                                    var isCurrent = #{userBean.current};
                                    if (isCurrent){
                                        item.append('<div class="label deleteButton" style="top: 0">\n\
                                                        <a href="#" class="btn btn-danger label" \n\
                                                            onclick=" deletePhoto(' + photo.id + '); \n\
                                                            return false;" title="Удалить">\n\
                                                            <span class="glyphicon glyphicon-remove">\n\
                                                            </span>\n\
                                                        </a> \n\
                                                     </div>  ');
                                        item.append('<div class="label deleteButton" style="top: 0; right: 25px">\n\
                                                        <a href="#" class="btn btn-primary label" \n\
                                                            onclick=" editPhoto(' + photo.id + '); \n\
                                                            return false;" title="Редактировать">\n\
                                                            <span class="glyphicon glyphicon-edit">\n\
                                                            </span>\n\
                                                        </a> \n\
                                                     </div>  ');
                                    }
                                    return item;
                                }
                                //]]>
                </script>
                <script>
                    $(function() {
                        resetPhotosList();
                    });
                </script>
                
                <link rel="stylesheet" href="#{request.contextPath}/css/jquery.fileupload.css" type="text/css"/>
                <c:if test="#{userBean.current}">
                <script src="#{request.contextPath}/js/jquery.ui.widget.js"></script>
                <script src="#{request.contextPath}/js/jquery.fileupload.js"></script>
                    <script>         
                        $('#saveButton').click(function() {
                            var a = $('#editAlbumForm').serializeObject();
                            console.log(a);
                            if (a.name === undefined || a.name === '') {
                                return false;
                            }
                            $.post('#{request.contextPath}/resources/album/#{albumBean.albumId}/update', {data: JSON.stringify(a)})
                                    .done(function(data) {
                                        console.log(data);
                                        if (data.responseCode === 1) {
                                            $('#editAlbumModal').modal('hide');
                                        }
                                    });
                            return false;
                        });
                        /*jslint unparam: true */
                        /*global window, $ */
                        $(function() {
                            'use strict';
                            // Change this to the location of your server-side upload handler:
                            var url = '#{request.contextPath}/resources/file/upload';
                            $('#fileupload').fileupload({
                                url: url,
                                dataType: 'json',
                                sequentialUploads: true,
                                start: onUploadsStarted,
                                stop: onUploadFinished,
                                done: function(e, data) {
                                    console.log(data);
                                },
                                error: onUploadFinished,
                                progressall: function(e, data) {
                                    var progress = parseInt(data.loaded / data.total * 100, 10);
                                    $('#progress').show();
                                    $('#progress .progress-bar').css(
                                            'width',
                                            progress + '%'
                                            );
                                    console.log("progress=" + progress);
//                                            if (progress >= 100) {
//                                                onUploadFinished();
//                                            }
                                }
                            }).prop('disabled', !$.support.fileInput)
                                    .parent().addClass($.support.fileInput ? undefined : 'disabled');
                        });
                    </script>
                </c:if>
            </ui:define>

        </ui:composition>
    </h:body>

</html>
